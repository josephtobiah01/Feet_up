@model FitappAdminWeb.Net7.Models.TrainingProgramEditViewModel

<form id="progEditor">
    <div class="form-group">
        <input type="hidden" id="editmode" value="@(Model.Data.Id > 0)" />
        <input type="hidden" asp-for="Data.UserId" data-bind="value: UserId" />
        <fieldset>
            <legend>Program Details</legend>
            @if (Model.CurrentUser != null)
            {
                <div class="mb-3">
                    <label for="currentuser">User:</label>
                    <span class="form-text">@($"{Model.CurrentUser.FirstName} {Model.CurrentUser.LastName} (User ID: {Model.CurrentUser.Id})")</span>
                </div>
            }
            <div class="mb-3">
                <label asp-for="Data.Name">Program Name</label>
                <input type="text" asp-for="Data.Name" class="form-control" data-bind="value: Name" required />
            </div>
            <div class="row">
                <div class="col-md-6 mb-3">
                    <input class="form-check-input" type="checkbox" asp-for="Data.IsCurrent" data-bind="checked: IsCurrent, disabled: IsTemplate" />
                    <label class="form-check-label" asp-for="Data.IsCurrent">Set As Current Program</label>
                    <span class="form-text text-muted">This will set this plan as the new current program for this user.</span>
                </div>
                <div class="col-md-6 mb-3">
                    <input class="form-check-input" type="checkbox" asp-for="Data.IsTemplate" data-bind="checked: IsTemplate, disabled: IsCurrent" />
                    <label class="form-check-label" asp-for="Data.IsTemplate">Template Program</label>
                    <span class="form-text text-muted">Template Programs can only be used for creating new programs. This cannot be set as a current program.</span>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label asp-for="Data.StartDate">Start Date</label>
                    <input type="date" class="form-control" asp-for="Data.StartDate" data-bind="value: StartDate" required />
                    <span class="form-text">Please select a Monday to ensure correct date calculations</span>
                </div>
                <div class="col-md-6 mb-3">
                    <label asp-for="Data.EndDate">End Date</label>
                    <input type="text" class="form-control" placeholder="mm/dd/yyyy" asp-for="Data.StartDate" data-bind="value: DisplayDate(EndDate())" disabled />
                    <span class="form-text">End Date will always be 12 weeks later (84 days).</span>
                </div>
            </div>
            @if (Model.Data.Id == 0)
            {
                <div class="mb-3">
                    <label asp-for="Data.LoadTemplateId">Create from an existing plan</label>
                <select class="form-select" asp-items="Model.List_ProgramTemplates" asp-for="Data.LoadTemplateId" data-bind="value: TemplateId">
                    <option value="0">No Template</option>
                </select>          
                <span class="form-text text-muted">Note: Loading a template will copy that program's plan and exercise structure.</span>
            </div>
            }
        </fieldset>
    </div>
    @*
    <div class="form-group">
        <fieldset>
            <legend>
                <span>Plan Schedule</span>
                <button class="btn btn-outline-primary" data-bind="click: AddWeek">
                    <i data-feather="plus"></i>
                    <span>Add Week Schedule</span>
                </button>
            </legend>
            <div class="list-group altrow-color" data-bind="foreach: WeeklyPlans">
                <div class="list-group-item list-group-item-action">
                    <div class="d-flex justify-content-between">
                        <span class="fw-bold">Week <span data-bind="text: Index"></span></span>
                        <button type="button" class="btn btn-close" data-bind="click: $parent.RemoveWeek"></button>
                    </div>                  
                    <div class="form-group row">
                        <div class="col-md-6 mb-3">
                            <label>Week Start</label>
                            <input class="form-control" type="date" data-bind="value: StartDate" required />
                        </div>
                        <div class="col-md-6 mb-3">
                            <label>Week End</label>
                            <input class="form-control" type="date" data-bind="value: EndDate" required />
                        </div>
                    </div>
                    <button type="button" class="btn btn-outline-secondary mb-3" data-bind="click: AddDay">Add Daily Plan</button>
                    <div class="list-group" data-bind="foreach: DailyPlans">
                        <div class="list-group-item list-group-item-action">
                            <div class="d-flex justify-content-between">
                                <span class="fw-bold">Day <span data-bind="text: Index"></span></span>
                                <button type="button" class="btn btn-close" data-bind="click: $parent.RemoveDay"></button>
                            </div>
                            <div>
                                <label>Start Day</label>
                                <input class="form-control" type="date" data-bind="value: StartDay" required />
                            </div>
                        </div>                       
                    </div>
                </div>
            </div>
        </fieldset>
    </div>
    *@
    <div class="form-group d-flex flex-row-reverse">
        <button type="button" class="btn btn-primary" data-bind="click: SubmitModel, enable: EnableSubmit">Save</button>
        <a href='javascript:history.go(-1)' class="btn btn-link"> Cancel </a>
    </div>
</form>

@section Scripts {
    <script asp-src-include="lib/knockout/knockout-latest.debug.js"></script>
    <script src="~/lib/managed/plan_edit.js"></script>
    <script>
        window.fitapp.TrainingProgramEdit.Initialize({
            UserId: @(Model.CurrentUser != null ? Model.CurrentUser.Id : 0),
            PlanId: @(Model.Data != null ? Model.Data.Id : 0)
        });
        feather.replace();
    </script>
}