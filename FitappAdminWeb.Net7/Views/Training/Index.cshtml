@model FitappAdminWeb.Net7.Models.TrainingProgramViewModel
@{
    var orderedPrograms = Model.Programs.OrderByDescending(r => r.IsCurrent).ThenByDescending(r => r.Id);
    string username = !String.IsNullOrEmpty(Model.CurrentUser.FirstName) ? 
        $"{Model.CurrentUser.FirstName} {Model.CurrentUser.LastName} (ID: {Model.CurrentUser.Id})" :
        Model.IdentityUser != null ? $"{Model.IdentityUser.UserName} (ID: {Model.CurrentUser.Id})" : $"User ID {Model.CurrentUser.Id}";
}

<div class="d-flex justify-content-between">
    <h4>12 Week Training Programs</h4>
    <a class="btn btn-primary" asp-action="EditProgram" asp-route-new="true">
        <i data-feather="plus"></i>&nbsp;Add New Program
    </a>
</div>
<p>These are all the 12 week training programs associated with this User: <a asp-action="Details" asp-controller="User" asp-route-id="@Model.CurrentUser.Id">@username</a></p>
<div id="program_list">
    @foreach (var program in orderedPrograms)
    {
        <div class="list-group altrow-color">
            <div class="list-group-item">
                <div class="d-flex justify-content-between">
                    <span>
                        <a class="fw-bold fs-5" asp-action="ProgramDetails" asp-route-id="@program.Id" target="_blank">@program.Name</a>
                        <span class="text-muted">(ID: @program.Id)</span>
                        @if (program.IsCurrent)
                        {
                            <span class="badge bg-primary">Current</span>
                        }
                    </span>
                    <button class="btn btn-outline-primary" data-bs-toggle="collapse" data-bs-target="#plan_details_@program.Id" aria-expanded="false" aria-controls="plan_details_@program.Id">
                        <i data-feather="info"></i>&nbsp;Plan Summary
                    </button>
                </div>
                <div>
                    <span class="fw-bold">Duration:</span>
                    <span class="text-muted">@program.DurationWeeks Weeks</span>
                </div>
                <div>
                    <span class="fw-bold">Effectivity Date:</span>
                    <span class="text-muted">@program.StartDate.GetValueOrDefault().ToLongDateString() - @program.EndDate.GetValueOrDefault().ToLongDateString()</span>
                </div>
                <div id="plan_details_@program.Id" class="collapse list-group mb-3">
                    @{
                        int weekIndex = 1;
                    }
                    @foreach (var week in program.EdsWeeklyPlan)
                    {
                        <div class="list-group-item">
                            <span class="fw-bold">Week @(weekIndex++) (@week.StartDate.GetValueOrDefault().ToLongDateString() - @week.EndDate.GetValueOrDefault().ToLongDateString())</span>
                            <span class="text-muted">Id: @week.Id</span>
                            <div class="list-group mt-3">
                                @{
                                    int dayIndex = 1;
                                }
                                @foreach (var day in week.EdsDailyPlan)
                                {
                                    <div class="list-group-item list-group-item-action">
                                        <span class="fw-bold">Day @(dayIndex++) (@day.StartDay.GetValueOrDefault().ToLongDateString())</span>
                                        <span class="text-muted">ID: @day.Id</span>
                                        @if (day.IsComplete)
                                        {
                                            <span class="badge bg-success">Complete</span>
                                        }
                                        <a class="d-block" asp-action="sessions"
                                           target="_blank"
                                           asp-route-id="@Model.CurrentUser.Id"
                                           asp-route-pid="@program.Id"
                                           asp-route-date="@day.StartDay.GetValueOrDefault().ToString("yyyy-MM-dd")">@day.EdsTrainingSession.Count Training Session/s</a>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
                
                <div class="d-flex justify-content-end">
                    <a class="btn btn-outline-primary me-2" asp-action="Sessions" asp-route-id="@Model.CurrentUser.Id" asp-route-pid="@program.Id">
                        <i data-feather="list"></i>&nbsp;Training Sessions
                    </a>
                    <a class="btn btn-primary me-2" asp-action="EditProgram" asp-route-id="@program.Id">
                        <i data-feather="edit"></i>&nbsp;Edit
                    </a>
                    <button class="btn btn-danger" action="delete" data-id="@program.Id">
                        <i data-feather="trash-2"></i>&nbsp;Delete
                    </button>
                </div>
            </div>
        </div>
    } 
</div>

@section Scripts {
    <script>
        (function () {
            var delete_url = "/api/data/deleteplan";

            function callDelete(e) {
                if (window.confirm("Are you sure you want to delete this plan and all exercises under it? This cannot be undone.")) {
                    var tgt = e.currentTarget;
                    if (tgt == null) {
                        tgt = e.target;
                    }

                    var idToDelete = tgt.getAttribute("data-id");
                    fetch(delete_url, {
                        method: "POST",
                        cache: "no-cache",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify(idToDelete)
                    })
                    .then((response) => {
                        if (!response.ok {
                            throw new Error("Failed to delete plan");
                        }
                        return response.json();
                    })
                    .then((data) => {
                        if (data == true) {
                            document.location.reload();
                        }
                    })
                    .catch((error) => {
                        window.FitApp.showToast("Error", "Failed to delete plan", "danger");
                    })
                }
            }

            var deleteButtons = document.querySelectorAll("button[action='delete']");
            deleteButtons.forEach((button) => {
                button.addEventListener("click", callDelete);
            });
        })();
    </script>
}